.toastAlign {
    --toastBorderRadius: 20px;
    --toastColor: #212728;
    --err: rgb(241, 99, 99);
    --button: rgb(63, 63, 63);
    --buttonHighlight: linear-gradient(#2590ff, #007bff);
    --fontDisplay: 'Poppins', sans-serif;
    --sleek: cubic-bezier(0.03, 0.77, 0.34, 1);

    position: fixed;
    top: 0;
    width: 100vw;
    height: 100vh;
    z-index: 99;
    display: grid;
    place-items: center;
    pointer-events: none;
    //opacity: 0;
    display: none;
    transition: .3s opacity, .5s backdrop-filter;
    //backdrop-filter: grayscale(100%);

    &.toasted {
        opacity: 0 !important;
    }

    &.next {
        cursor: url(./icons/next.png), auto;
    }

    .toastTransformWrap {
        //are you fucking serious
        transform: translateY(0);
    }

    .toastWrap {

        //gradient border fucks up when assigned animation so another layer of wrapping :)
        &.toastBoing {
            opacity: 1;
            animation: boing 1.2s forwards;
        }

        &.toastErr {
            opacity: 1;
            animation: shake .5s forwards ease-in-out;

            .toast {
                background: var(--err);
            }

            .toastDashes {
                border: solid 1px var(--toastColor);
                border-style: dashed;
                color: var(--toastColor);
            }
        }

        &.toastShake {
            opacity: 1;
            animation: shake .5s forwards ease-in-out;
        }

        &.toastPushed {
            opacity: 1;
            animation: fade .5s forwards;
        }

        transition: .3s opacity;
        opacity: 0;
    }


    .toast {
        //width: 350px;
        display: flex;
        align-items: center;
        margin: auto;

        position: relative;
        box-sizing: border-box;
        padding: .5rem;

        $border: 1px;
        background: var(--toastColor);
        background-clip: padding-box;

        border: solid $border transparent;

        border-radius: var(--toastBorderRadius);
        box-shadow: rgba(27, 32, 32, 0.788) 0 3px 120px 80px;

        transition: .5s background;

        &:before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            z-index: -1;
            margin: -$border;

            border-radius: inherit;

            background: linear-gradient(rgba(89, 105, 107, 0.8), rgba(235, 235, 235, 0.8));
        }
    }

    .toastDashes {
        position: relative;
        width: 100%;
        height: 100%;
        padding: 1rem;
        border: solid 1px rgba(255, 255, 255, 0.5);
        border-style: dashed;
        border-radius: calc(var(--toastBorderRadius) / 2);
        color: white;
        font-family: var(--fontDisplay);
        text-align: center;
        display: flex;
        flex-direction: column;
        align-items: center;

        .toastIcon {
            width: 100px;
            height: 100px;
            background-image: var(--toastIconUrl);
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            margin-bottom: 1rem;
            margin-top: .5rem;

            &.tiStop {
                background: url(./icons/stop.svg);
                background-size: cover;
                background-position: center;
                background-repeat: no-repeat;
            }

            &.tiWarn {
                background: url(./icons/warn.svg);
                background-size: cover;
                background-position: center;
                background-repeat: no-repeat;
            }

            &.tiInfo {
                background: url(./icons/info.svg);
                background-size: cover;
                background-position: center;
                background-repeat: no-repeat;
            }
        }

        .toastTitle {
            font-size: 1.2em;
            margin-bottom: 1rem;
            max-width: 300px;
        }

        .toastText {
            max-width: 300px;
        }

        .toastButtons {
            width: 100%;
            display: flex;
            justify-content: space-around;
            margin-top: 1.5rem;
        }

        .tbButton {
            font-size: 1.2em;
            font-weight: 500;
            padding: .3rem;
            min-width: 130px;
            max-width: 130px;
            height: 100%;
            border-radius: calc(var(--toastBorderRadius) / 2);
            background: var(--button);
            display: grid;
            place-items: center;
            transition: .2s filter var(--sleek);
            margin: 0 .2rem;
            cursor: pointer;

            &:hover {
                filter: brightness(1.3);
            }

            &.highlight {
                background: var(--buttonHighlight)
            }

            &.vertical {
                min-width: 100% !important;
                margin: 1em 0 0;

            }
        }
    }
}

@keyframes fade {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes boing {
    0% {
        opacity: 0;
    }

    24% {
        opacity: 0;
        transform: translateY(0px);
        animation-timing-function: ease-in;
    }

    40% {
        opacity: 1;
        transform: translateY(-20px);
        animation-timing-function: ease-in;
    }

    65% {
        transform: translateY(-10px);
        animation-timing-function: ease-in;
    }

    82% {
        transform: translateY(-4px);
        animation-timing-function: ease-in;
    }

    93% {
        transform: translateY(-2px);
        animation-timing-function: ease-in;
    }

    25%,
    55%,
    75%,
    87% {
        transform: translateY(0px);
        animation-timing-function: ease-out;
    }

    100% {
        transform: translateY(0px);
        animation-timing-function: ease-out;
    }
}

@keyframes shake {

    0%,
    100% {
        transform: translateX(0);
    }

    20% {
        transform: translateX(-5px);
    }

    40% {
        transform: translateX(3px);
    }

    60% {
        transform: translateX(-2px);
    }

    80% {
        transform: translateX(1px);
    }
}